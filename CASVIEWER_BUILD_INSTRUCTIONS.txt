See the Firestorm build instruction text files plus the instructions at the following sites:
- http://wiki.phoenixviewer.com/fs_compiling_firestorm
- http://wiki.secondlife.com/wiki/Get_source_and_compile


You need to provision, package, and install the Oculus Rift SDK yourself: the Oculus Rift SDK is packaged up with autobuild 
in the same manner as FMOD. The resultant package file however cannot be put online for distribution because per the SDK 
license, "source redistributions must include the whole of the Oculus SDK".

To build the package, "3p-ovr-sdk":
- Make a local clone of the repository: https://bitbucket.org/cinderblocks/3p-ovr-sdk
- Put a copy of the Oculus Rift SDK Zip file in the root directory.
- In a command prompt, change directory to the root directory.
- Then: autobuild build ... This should result in "BUILD SUCCEEDED".
- Then: autobuild package ... This should result in "BUILD SUCCEEDED" with the package name and an MD5 checksum. And you'll 
  find the .bz2 package file in the root directory.
- Make note of the package filename and checksum for use in the next step.

To use the package in building the viewer for a Windows build:
- In the Viewer root directory, copy the autobuild.xml file to my_autobuild.xml. If you're including FMOD in your build you 
  will have already done this step.
- In a command prompt, change to your viewer source root directory.
- Then: set AUTOBUILD_CONFIG_FILE=my_autobuild.xml
- Then: autobuild installables add ovr-sdk license=OVR license_file=LICENSES\ovr-sdk.txt platform=windows hash=<md5 value> 
  url=file:///<sdk path>	
  Your my_autobuild.xml file will now include a section for "ovr-sdk".
  Note: If you've previously done this step and are now just wanting to update to use a newer package you've made, use 
  "edit" instead of "add" in the command and leave out the license and license_file parameters.
- Then: autobuild install ovr-sdk

Setting up Mac OSX and Linux SDK versions will be similar along the lines of the FMOD instructions for these platforms.


For building the viewer, the Firestorm target names such as ReleaseFS_open are retained.

For example, to build your own private version without installer:
autobuild configure -c ReleaseFS_open -- -DPACKAGE:BOOL=FALSE
autobuild build -c ReleaseFS_open --no-configure

Building and running on Linux has not been fully updated. In particular, while much of the build scripts have been updated, 
certain Linux-specific files have not been renamed or updated, including:
- debian
- indra\linux_crash_logger
- indra\linux_updater
- indra\llwindow\ Linux specific versions of the llwindow*.h and .cpp files
- indra\newview\linux_tools
